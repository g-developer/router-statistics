// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: iplibrary.proto

#ifndef PROTOBUF_iplibrary_2eproto__INCLUDED
#define PROTOBUF_iplibrary_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace colombo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_iplibrary_2eproto();
void protobuf_AssignDesc_iplibrary_2eproto();
void protobuf_ShutdownFile_iplibrary_2eproto();

class IPLibrary;
class IPLibrary_IPRecord;

// ===================================================================

class IPLibrary_IPRecord : public ::google::protobuf::Message {
 public:
  IPLibrary_IPRecord();
  virtual ~IPLibrary_IPRecord();
  
  IPLibrary_IPRecord(const IPLibrary_IPRecord& from);
  
  inline IPLibrary_IPRecord& operator=(const IPLibrary_IPRecord& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const IPLibrary_IPRecord& default_instance();
  
  void Swap(IPLibrary_IPRecord* other);
  
  // implements Message ----------------------------------------------
  
  IPLibrary_IPRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IPLibrary_IPRecord& from);
  void MergeFrom(const IPLibrary_IPRecord& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 start_ip = 1;
  inline bool has_start_ip() const;
  inline void clear_start_ip();
  static const int kStartIpFieldNumber = 1;
  inline ::google::protobuf::uint32 start_ip() const;
  inline void set_start_ip(::google::protobuf::uint32 value);
  
  // required uint32 end_ip = 2;
  inline bool has_end_ip() const;
  inline void clear_end_ip();
  static const int kEndIpFieldNumber = 2;
  inline ::google::protobuf::uint32 end_ip() const;
  inline void set_end_ip(::google::protobuf::uint32 value);
  
  // repeated int32 attr_ids = 3 [packed = true];
  inline int attr_ids_size() const;
  inline void clear_attr_ids();
  static const int kAttrIdsFieldNumber = 3;
  inline ::google::protobuf::int32 attr_ids(int index) const;
  inline void set_attr_ids(int index, ::google::protobuf::int32 value);
  inline void add_attr_ids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      attr_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_attr_ids();
  
  // @@protoc_insertion_point(class_scope:colombo.IPLibrary.IPRecord)
 private:
  inline void set_has_start_ip();
  inline void clear_has_start_ip();
  inline void set_has_end_ip();
  inline void clear_has_end_ip();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 start_ip_;
  ::google::protobuf::uint32 end_ip_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > attr_ids_;
  mutable int _attr_ids_cached_byte_size_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_iplibrary_2eproto();
  friend void protobuf_AssignDesc_iplibrary_2eproto();
  friend void protobuf_ShutdownFile_iplibrary_2eproto();
  
  void InitAsDefaultInstance();
  static IPLibrary_IPRecord* default_instance_;
};
// -------------------------------------------------------------------

class IPLibrary : public ::google::protobuf::Message {
 public:
  IPLibrary();
  virtual ~IPLibrary();
  
  IPLibrary(const IPLibrary& from);
  
  inline IPLibrary& operator=(const IPLibrary& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const IPLibrary& default_instance();
  
  void Swap(IPLibrary* other);
  
  // implements Message ----------------------------------------------
  
  IPLibrary* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IPLibrary& from);
  void MergeFrom(const IPLibrary& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef IPLibrary_IPRecord IPRecord;
  
  // accessors -------------------------------------------------------
  
  // required string encoding = 1;
  inline bool has_encoding() const;
  inline void clear_encoding();
  static const int kEncodingFieldNumber = 1;
  inline const ::std::string& encoding() const;
  inline void set_encoding(const ::std::string& value);
  inline void set_encoding(const char* value);
  inline void set_encoding(const char* value, size_t size);
  inline ::std::string* mutable_encoding();
  inline ::std::string* release_encoding();
  
  // required uint32 total_ip_count = 2;
  inline bool has_total_ip_count() const;
  inline void clear_total_ip_count();
  static const int kTotalIpCountFieldNumber = 2;
  inline ::google::protobuf::uint32 total_ip_count() const;
  inline void set_total_ip_count(::google::protobuf::uint32 value);
  
  // optional string generate_date = 3;
  inline bool has_generate_date() const;
  inline void clear_generate_date();
  static const int kGenerateDateFieldNumber = 3;
  inline const ::std::string& generate_date() const;
  inline void set_generate_date(const ::std::string& value);
  inline void set_generate_date(const char* value);
  inline void set_generate_date(const char* value, size_t size);
  inline ::std::string* mutable_generate_date();
  inline ::std::string* release_generate_date();
  
  // optional string generate_by = 4;
  inline bool has_generate_by() const;
  inline void clear_generate_by();
  static const int kGenerateByFieldNumber = 4;
  inline const ::std::string& generate_by() const;
  inline void set_generate_by(const ::std::string& value);
  inline void set_generate_by(const char* value);
  inline void set_generate_by(const char* value, size_t size);
  inline ::std::string* mutable_generate_by();
  inline ::std::string* release_generate_by();
  
  // repeated string attrnames = 5;
  inline int attrnames_size() const;
  inline void clear_attrnames();
  static const int kAttrnamesFieldNumber = 5;
  inline const ::std::string& attrnames(int index) const;
  inline ::std::string* mutable_attrnames(int index);
  inline void set_attrnames(int index, const ::std::string& value);
  inline void set_attrnames(int index, const char* value);
  inline void set_attrnames(int index, const char* value, size_t size);
  inline ::std::string* add_attrnames();
  inline void add_attrnames(const ::std::string& value);
  inline void add_attrnames(const char* value);
  inline void add_attrnames(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& attrnames() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_attrnames();
  
  // repeated bytes string_dict = 6;
  inline int string_dict_size() const;
  inline void clear_string_dict();
  static const int kStringDictFieldNumber = 6;
  inline const ::std::string& string_dict(int index) const;
  inline ::std::string* mutable_string_dict(int index);
  inline void set_string_dict(int index, const ::std::string& value);
  inline void set_string_dict(int index, const char* value);
  inline void set_string_dict(int index, const void* value, size_t size);
  inline ::std::string* add_string_dict();
  inline void add_string_dict(const ::std::string& value);
  inline void add_string_dict(const char* value);
  inline void add_string_dict(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& string_dict() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_string_dict();
  
  // repeated .colombo.IPLibrary.IPRecord iprecords = 7;
  inline int iprecords_size() const;
  inline void clear_iprecords();
  static const int kIprecordsFieldNumber = 7;
  inline const ::colombo::IPLibrary_IPRecord& iprecords(int index) const;
  inline ::colombo::IPLibrary_IPRecord* mutable_iprecords(int index);
  inline ::colombo::IPLibrary_IPRecord* add_iprecords();
  inline const ::google::protobuf::RepeatedPtrField< ::colombo::IPLibrary_IPRecord >&
      iprecords() const;
  inline ::google::protobuf::RepeatedPtrField< ::colombo::IPLibrary_IPRecord >*
      mutable_iprecords();
  
  // @@protoc_insertion_point(class_scope:colombo.IPLibrary)
 private:
  inline void set_has_encoding();
  inline void clear_has_encoding();
  inline void set_has_total_ip_count();
  inline void clear_has_total_ip_count();
  inline void set_has_generate_date();
  inline void clear_has_generate_date();
  inline void set_has_generate_by();
  inline void clear_has_generate_by();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* encoding_;
  ::std::string* generate_date_;
  ::std::string* generate_by_;
  ::google::protobuf::RepeatedPtrField< ::std::string> attrnames_;
  ::google::protobuf::RepeatedPtrField< ::std::string> string_dict_;
  ::google::protobuf::RepeatedPtrField< ::colombo::IPLibrary_IPRecord > iprecords_;
  ::google::protobuf::uint32 total_ip_count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_iplibrary_2eproto();
  friend void protobuf_AssignDesc_iplibrary_2eproto();
  friend void protobuf_ShutdownFile_iplibrary_2eproto();
  
  void InitAsDefaultInstance();
  static IPLibrary* default_instance_;
};
// ===================================================================


// ===================================================================

// IPLibrary_IPRecord

// required uint32 start_ip = 1;
inline bool IPLibrary_IPRecord::has_start_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IPLibrary_IPRecord::set_has_start_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IPLibrary_IPRecord::clear_has_start_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IPLibrary_IPRecord::clear_start_ip() {
  start_ip_ = 0u;
  clear_has_start_ip();
}
inline ::google::protobuf::uint32 IPLibrary_IPRecord::start_ip() const {
  return start_ip_;
}
inline void IPLibrary_IPRecord::set_start_ip(::google::protobuf::uint32 value) {
  set_has_start_ip();
  start_ip_ = value;
}

// required uint32 end_ip = 2;
inline bool IPLibrary_IPRecord::has_end_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IPLibrary_IPRecord::set_has_end_ip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IPLibrary_IPRecord::clear_has_end_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IPLibrary_IPRecord::clear_end_ip() {
  end_ip_ = 0u;
  clear_has_end_ip();
}
inline ::google::protobuf::uint32 IPLibrary_IPRecord::end_ip() const {
  return end_ip_;
}
inline void IPLibrary_IPRecord::set_end_ip(::google::protobuf::uint32 value) {
  set_has_end_ip();
  end_ip_ = value;
}

// repeated int32 attr_ids = 3 [packed = true];
inline int IPLibrary_IPRecord::attr_ids_size() const {
  return attr_ids_.size();
}
inline void IPLibrary_IPRecord::clear_attr_ids() {
  attr_ids_.Clear();
}
inline ::google::protobuf::int32 IPLibrary_IPRecord::attr_ids(int index) const {
  return attr_ids_.Get(index);
}
inline void IPLibrary_IPRecord::set_attr_ids(int index, ::google::protobuf::int32 value) {
  attr_ids_.Set(index, value);
}
inline void IPLibrary_IPRecord::add_attr_ids(::google::protobuf::int32 value) {
  attr_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
IPLibrary_IPRecord::attr_ids() const {
  return attr_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
IPLibrary_IPRecord::mutable_attr_ids() {
  return &attr_ids_;
}

// -------------------------------------------------------------------

// IPLibrary

// required string encoding = 1;
inline bool IPLibrary::has_encoding() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IPLibrary::set_has_encoding() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IPLibrary::clear_has_encoding() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IPLibrary::clear_encoding() {
  if (encoding_ != &::google::protobuf::internal::kEmptyString) {
    encoding_->clear();
  }
  clear_has_encoding();
}
inline const ::std::string& IPLibrary::encoding() const {
  return *encoding_;
}
inline void IPLibrary::set_encoding(const ::std::string& value) {
  set_has_encoding();
  if (encoding_ == &::google::protobuf::internal::kEmptyString) {
    encoding_ = new ::std::string;
  }
  encoding_->assign(value);
}
inline void IPLibrary::set_encoding(const char* value) {
  set_has_encoding();
  if (encoding_ == &::google::protobuf::internal::kEmptyString) {
    encoding_ = new ::std::string;
  }
  encoding_->assign(value);
}
inline void IPLibrary::set_encoding(const char* value, size_t size) {
  set_has_encoding();
  if (encoding_ == &::google::protobuf::internal::kEmptyString) {
    encoding_ = new ::std::string;
  }
  encoding_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* IPLibrary::mutable_encoding() {
  set_has_encoding();
  if (encoding_ == &::google::protobuf::internal::kEmptyString) {
    encoding_ = new ::std::string;
  }
  return encoding_;
}
inline ::std::string* IPLibrary::release_encoding() {
  clear_has_encoding();
  if (encoding_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = encoding_;
    encoding_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 total_ip_count = 2;
inline bool IPLibrary::has_total_ip_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IPLibrary::set_has_total_ip_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IPLibrary::clear_has_total_ip_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IPLibrary::clear_total_ip_count() {
  total_ip_count_ = 0u;
  clear_has_total_ip_count();
}
inline ::google::protobuf::uint32 IPLibrary::total_ip_count() const {
  return total_ip_count_;
}
inline void IPLibrary::set_total_ip_count(::google::protobuf::uint32 value) {
  set_has_total_ip_count();
  total_ip_count_ = value;
}

// optional string generate_date = 3;
inline bool IPLibrary::has_generate_date() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IPLibrary::set_has_generate_date() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IPLibrary::clear_has_generate_date() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IPLibrary::clear_generate_date() {
  if (generate_date_ != &::google::protobuf::internal::kEmptyString) {
    generate_date_->clear();
  }
  clear_has_generate_date();
}
inline const ::std::string& IPLibrary::generate_date() const {
  return *generate_date_;
}
inline void IPLibrary::set_generate_date(const ::std::string& value) {
  set_has_generate_date();
  if (generate_date_ == &::google::protobuf::internal::kEmptyString) {
    generate_date_ = new ::std::string;
  }
  generate_date_->assign(value);
}
inline void IPLibrary::set_generate_date(const char* value) {
  set_has_generate_date();
  if (generate_date_ == &::google::protobuf::internal::kEmptyString) {
    generate_date_ = new ::std::string;
  }
  generate_date_->assign(value);
}
inline void IPLibrary::set_generate_date(const char* value, size_t size) {
  set_has_generate_date();
  if (generate_date_ == &::google::protobuf::internal::kEmptyString) {
    generate_date_ = new ::std::string;
  }
  generate_date_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* IPLibrary::mutable_generate_date() {
  set_has_generate_date();
  if (generate_date_ == &::google::protobuf::internal::kEmptyString) {
    generate_date_ = new ::std::string;
  }
  return generate_date_;
}
inline ::std::string* IPLibrary::release_generate_date() {
  clear_has_generate_date();
  if (generate_date_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = generate_date_;
    generate_date_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string generate_by = 4;
inline bool IPLibrary::has_generate_by() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IPLibrary::set_has_generate_by() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IPLibrary::clear_has_generate_by() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IPLibrary::clear_generate_by() {
  if (generate_by_ != &::google::protobuf::internal::kEmptyString) {
    generate_by_->clear();
  }
  clear_has_generate_by();
}
inline const ::std::string& IPLibrary::generate_by() const {
  return *generate_by_;
}
inline void IPLibrary::set_generate_by(const ::std::string& value) {
  set_has_generate_by();
  if (generate_by_ == &::google::protobuf::internal::kEmptyString) {
    generate_by_ = new ::std::string;
  }
  generate_by_->assign(value);
}
inline void IPLibrary::set_generate_by(const char* value) {
  set_has_generate_by();
  if (generate_by_ == &::google::protobuf::internal::kEmptyString) {
    generate_by_ = new ::std::string;
  }
  generate_by_->assign(value);
}
inline void IPLibrary::set_generate_by(const char* value, size_t size) {
  set_has_generate_by();
  if (generate_by_ == &::google::protobuf::internal::kEmptyString) {
    generate_by_ = new ::std::string;
  }
  generate_by_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* IPLibrary::mutable_generate_by() {
  set_has_generate_by();
  if (generate_by_ == &::google::protobuf::internal::kEmptyString) {
    generate_by_ = new ::std::string;
  }
  return generate_by_;
}
inline ::std::string* IPLibrary::release_generate_by() {
  clear_has_generate_by();
  if (generate_by_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = generate_by_;
    generate_by_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated string attrnames = 5;
inline int IPLibrary::attrnames_size() const {
  return attrnames_.size();
}
inline void IPLibrary::clear_attrnames() {
  attrnames_.Clear();
}
inline const ::std::string& IPLibrary::attrnames(int index) const {
  return attrnames_.Get(index);
}
inline ::std::string* IPLibrary::mutable_attrnames(int index) {
  return attrnames_.Mutable(index);
}
inline void IPLibrary::set_attrnames(int index, const ::std::string& value) {
  attrnames_.Mutable(index)->assign(value);
}
inline void IPLibrary::set_attrnames(int index, const char* value) {
  attrnames_.Mutable(index)->assign(value);
}
inline void IPLibrary::set_attrnames(int index, const char* value, size_t size) {
  attrnames_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* IPLibrary::add_attrnames() {
  return attrnames_.Add();
}
inline void IPLibrary::add_attrnames(const ::std::string& value) {
  attrnames_.Add()->assign(value);
}
inline void IPLibrary::add_attrnames(const char* value) {
  attrnames_.Add()->assign(value);
}
inline void IPLibrary::add_attrnames(const char* value, size_t size) {
  attrnames_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
IPLibrary::attrnames() const {
  return attrnames_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
IPLibrary::mutable_attrnames() {
  return &attrnames_;
}

// repeated bytes string_dict = 6;
inline int IPLibrary::string_dict_size() const {
  return string_dict_.size();
}
inline void IPLibrary::clear_string_dict() {
  string_dict_.Clear();
}
inline const ::std::string& IPLibrary::string_dict(int index) const {
  return string_dict_.Get(index);
}
inline ::std::string* IPLibrary::mutable_string_dict(int index) {
  return string_dict_.Mutable(index);
}
inline void IPLibrary::set_string_dict(int index, const ::std::string& value) {
  string_dict_.Mutable(index)->assign(value);
}
inline void IPLibrary::set_string_dict(int index, const char* value) {
  string_dict_.Mutable(index)->assign(value);
}
inline void IPLibrary::set_string_dict(int index, const void* value, size_t size) {
  string_dict_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* IPLibrary::add_string_dict() {
  return string_dict_.Add();
}
inline void IPLibrary::add_string_dict(const ::std::string& value) {
  string_dict_.Add()->assign(value);
}
inline void IPLibrary::add_string_dict(const char* value) {
  string_dict_.Add()->assign(value);
}
inline void IPLibrary::add_string_dict(const void* value, size_t size) {
  string_dict_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
IPLibrary::string_dict() const {
  return string_dict_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
IPLibrary::mutable_string_dict() {
  return &string_dict_;
}

// repeated .colombo.IPLibrary.IPRecord iprecords = 7;
inline int IPLibrary::iprecords_size() const {
  return iprecords_.size();
}
inline void IPLibrary::clear_iprecords() {
  iprecords_.Clear();
}
inline const ::colombo::IPLibrary_IPRecord& IPLibrary::iprecords(int index) const {
  return iprecords_.Get(index);
}
inline ::colombo::IPLibrary_IPRecord* IPLibrary::mutable_iprecords(int index) {
  return iprecords_.Mutable(index);
}
inline ::colombo::IPLibrary_IPRecord* IPLibrary::add_iprecords() {
  return iprecords_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::colombo::IPLibrary_IPRecord >&
IPLibrary::iprecords() const {
  return iprecords_;
}
inline ::google::protobuf::RepeatedPtrField< ::colombo::IPLibrary_IPRecord >*
IPLibrary::mutable_iprecords() {
  return &iprecords_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace colombo

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_iplibrary_2eproto__INCLUDED
